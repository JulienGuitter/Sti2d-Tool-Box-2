<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        C2eOxtg/nI+8AAAAAElFTkSuQmCC
</value>
  </data>
</root>